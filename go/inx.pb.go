// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: inx.proto

package inx

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageMetadata_LedgerInclusionState int32

const (
	MessageMetadata_NO_TRANSACTION MessageMetadata_LedgerInclusionState = 0
	MessageMetadata_INCLUDED       MessageMetadata_LedgerInclusionState = 1
	MessageMetadata_CONFLICTING    MessageMetadata_LedgerInclusionState = 2
)

// Enum value maps for MessageMetadata_LedgerInclusionState.
var (
	MessageMetadata_LedgerInclusionState_name = map[int32]string{
		0: "NO_TRANSACTION",
		1: "INCLUDED",
		2: "CONFLICTING",
	}
	MessageMetadata_LedgerInclusionState_value = map[string]int32{
		"NO_TRANSACTION": 0,
		"INCLUDED":       1,
		"CONFLICTING":    2,
	}
)

func (x MessageMetadata_LedgerInclusionState) Enum() *MessageMetadata_LedgerInclusionState {
	p := new(MessageMetadata_LedgerInclusionState)
	*p = x
	return p
}

func (x MessageMetadata_LedgerInclusionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageMetadata_LedgerInclusionState) Descriptor() protoreflect.EnumDescriptor {
	return file_inx_proto_enumTypes[0].Descriptor()
}

func (MessageMetadata_LedgerInclusionState) Type() protoreflect.EnumType {
	return &file_inx_proto_enumTypes[0]
}

func (x MessageMetadata_LedgerInclusionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageMetadata_LedgerInclusionState.Descriptor instead.
func (MessageMetadata_LedgerInclusionState) EnumDescriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{20, 0}
}

type MessageMetadata_ConflictReason int32

const (
	MessageMetadata_NONE                                  MessageMetadata_ConflictReason = 0
	MessageMetadata_INPUT_ALREADY_SPENT                   MessageMetadata_ConflictReason = 1
	MessageMetadata_INPUT_ALREADY_SPENT_IN_THIS_MILESTONE MessageMetadata_ConflictReason = 2
	MessageMetadata_INPUT_NOT_FOUND                       MessageMetadata_ConflictReason = 3
	MessageMetadata_INPUT_OUTPUT_SUM_MISMATCH             MessageMetadata_ConflictReason = 4
	MessageMetadata_INVALID_SIGNATURE                     MessageMetadata_ConflictReason = 5
	MessageMetadata_TIMELOCK_NOT_EXPIRED                  MessageMetadata_ConflictReason = 6
	MessageMetadata_INVALID_NATIVE_TOKENS                 MessageMetadata_ConflictReason = 7
	MessageMetadata_RETURN_AMOUNT_NOT_FULFILLED           MessageMetadata_ConflictReason = 8
	MessageMetadata_INVALID_INPUT_UNLOCK                  MessageMetadata_ConflictReason = 9
	MessageMetadata_INVALID_INPUTS_COMMITMENT             MessageMetadata_ConflictReason = 10
	MessageMetadata_INVALID_SENDER                        MessageMetadata_ConflictReason = 11
	MessageMetadata_INVALID_CHAIN_STATE_TRANSITION        MessageMetadata_ConflictReason = 12
	MessageMetadata_SEMANTIC_VALIDATION_FAILED            MessageMetadata_ConflictReason = 255
)

// Enum value maps for MessageMetadata_ConflictReason.
var (
	MessageMetadata_ConflictReason_name = map[int32]string{
		0:   "NONE",
		1:   "INPUT_ALREADY_SPENT",
		2:   "INPUT_ALREADY_SPENT_IN_THIS_MILESTONE",
		3:   "INPUT_NOT_FOUND",
		4:   "INPUT_OUTPUT_SUM_MISMATCH",
		5:   "INVALID_SIGNATURE",
		6:   "TIMELOCK_NOT_EXPIRED",
		7:   "INVALID_NATIVE_TOKENS",
		8:   "RETURN_AMOUNT_NOT_FULFILLED",
		9:   "INVALID_INPUT_UNLOCK",
		10:  "INVALID_INPUTS_COMMITMENT",
		11:  "INVALID_SENDER",
		12:  "INVALID_CHAIN_STATE_TRANSITION",
		255: "SEMANTIC_VALIDATION_FAILED",
	}
	MessageMetadata_ConflictReason_value = map[string]int32{
		"NONE":                                  0,
		"INPUT_ALREADY_SPENT":                   1,
		"INPUT_ALREADY_SPENT_IN_THIS_MILESTONE": 2,
		"INPUT_NOT_FOUND":                       3,
		"INPUT_OUTPUT_SUM_MISMATCH":             4,
		"INVALID_SIGNATURE":                     5,
		"TIMELOCK_NOT_EXPIRED":                  6,
		"INVALID_NATIVE_TOKENS":                 7,
		"RETURN_AMOUNT_NOT_FULFILLED":           8,
		"INVALID_INPUT_UNLOCK":                  9,
		"INVALID_INPUTS_COMMITMENT":             10,
		"INVALID_SENDER":                        11,
		"INVALID_CHAIN_STATE_TRANSITION":        12,
		"SEMANTIC_VALIDATION_FAILED":            255,
	}
)

func (x MessageMetadata_ConflictReason) Enum() *MessageMetadata_ConflictReason {
	p := new(MessageMetadata_ConflictReason)
	*p = x
	return p
}

func (x MessageMetadata_ConflictReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageMetadata_ConflictReason) Descriptor() protoreflect.EnumDescriptor {
	return file_inx_proto_enumTypes[1].Descriptor()
}

func (MessageMetadata_ConflictReason) Type() protoreflect.EnumType {
	return &file_inx_proto_enumTypes[1]
}

func (x MessageMetadata_ConflictReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageMetadata_ConflictReason.Descriptor instead.
func (MessageMetadata_ConflictReason) EnumDescriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{20, 1}
}

type APIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method  string            `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Path    string            `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Headers map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body    []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *APIRequest) Reset() {
	*x = APIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIRequest) ProtoMessage() {}

func (x *APIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIRequest.ProtoReflect.Descriptor instead.
func (*APIRequest) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{0}
}

func (x *APIRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *APIRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *APIRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *APIRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type APIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Headers map[string]string `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body    []byte            `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *APIResponse) Reset() {
	*x = APIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResponse) ProtoMessage() {}

func (x *APIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResponse.ProtoReflect.Descriptor instead.
func (*APIResponse) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{1}
}

func (x *APIResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *APIResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *APIResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type NoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoParams) Reset() {
	*x = NoParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoParams) ProtoMessage() {}

func (x *NoParams) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoParams.ProtoReflect.Descriptor instead.
func (*NoParams) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{2}
}

// Node
type NodeConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolParameters      *ProtocolParameters  `protobuf:"bytes,1,opt,name=protocolParameters,proto3" json:"protocolParameters,omitempty"`
	MilestonePublicKeyCount uint32               `protobuf:"varint,2,opt,name=milestonePublicKeyCount,proto3" json:"milestonePublicKeyCount,omitempty"`
	MilestoneKeyRanges      []*MilestoneKeyRange `protobuf:"bytes,3,rep,name=milestoneKeyRanges,proto3" json:"milestoneKeyRanges,omitempty"`
	BaseToken               *BaseToken           `protobuf:"bytes,4,opt,name=baseToken,proto3" json:"baseToken,omitempty"`
}

func (x *NodeConfiguration) Reset() {
	*x = NodeConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeConfiguration) ProtoMessage() {}

func (x *NodeConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeConfiguration.ProtoReflect.Descriptor instead.
func (*NodeConfiguration) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{3}
}

func (x *NodeConfiguration) GetProtocolParameters() *ProtocolParameters {
	if x != nil {
		return x.ProtocolParameters
	}
	return nil
}

func (x *NodeConfiguration) GetMilestonePublicKeyCount() uint32 {
	if x != nil {
		return x.MilestonePublicKeyCount
	}
	return 0
}

func (x *NodeConfiguration) GetMilestoneKeyRanges() []*MilestoneKeyRange {
	if x != nil {
		return x.MilestoneKeyRanges
	}
	return nil
}

func (x *NodeConfiguration) GetBaseToken() *BaseToken {
	if x != nil {
		return x.BaseToken
	}
	return nil
}

type ProtocolParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       uint32         `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	NetworkName   string         `protobuf:"bytes,2,opt,name=networkName,proto3" json:"networkName,omitempty"`
	Bech32HRP     string         `protobuf:"bytes,3,opt,name=bech32HRP,proto3" json:"bech32HRP,omitempty"`
	MinPoWScore   float32        `protobuf:"fixed32,4,opt,name=minPoWScore,proto3" json:"minPoWScore,omitempty"`
	RentStructure *RentStructure `protobuf:"bytes,5,opt,name=rentStructure,proto3" json:"rentStructure,omitempty"`
	TokenSupply   uint64         `protobuf:"varint,6,opt,name=tokenSupply,proto3" json:"tokenSupply,omitempty"`
}

func (x *ProtocolParameters) Reset() {
	*x = ProtocolParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtocolParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolParameters) ProtoMessage() {}

func (x *ProtocolParameters) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolParameters.ProtoReflect.Descriptor instead.
func (*ProtocolParameters) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{4}
}

func (x *ProtocolParameters) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProtocolParameters) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *ProtocolParameters) GetBech32HRP() string {
	if x != nil {
		return x.Bech32HRP
	}
	return ""
}

func (x *ProtocolParameters) GetMinPoWScore() float32 {
	if x != nil {
		return x.MinPoWScore
	}
	return 0
}

func (x *ProtocolParameters) GetRentStructure() *RentStructure {
	if x != nil {
		return x.RentStructure
	}
	return nil
}

func (x *ProtocolParameters) GetTokenSupply() uint64 {
	if x != nil {
		return x.TokenSupply
	}
	return 0
}

type BaseToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TickerSymbol    string `protobuf:"bytes,2,opt,name=tickerSymbol,proto3" json:"tickerSymbol,omitempty"`
	Unit            string `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	Subunit         string `protobuf:"bytes,4,opt,name=subunit,proto3" json:"subunit,omitempty"`
	Decimals        uint32 `protobuf:"varint,5,opt,name=decimals,proto3" json:"decimals,omitempty"`
	UseMetricPrefix bool   `protobuf:"varint,6,opt,name=useMetricPrefix,proto3" json:"useMetricPrefix,omitempty"`
}

func (x *BaseToken) Reset() {
	*x = BaseToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseToken) ProtoMessage() {}

func (x *BaseToken) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseToken.ProtoReflect.Descriptor instead.
func (*BaseToken) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{5}
}

func (x *BaseToken) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseToken) GetTickerSymbol() string {
	if x != nil {
		return x.TickerSymbol
	}
	return ""
}

func (x *BaseToken) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *BaseToken) GetSubunit() string {
	if x != nil {
		return x.Subunit
	}
	return ""
}

func (x *BaseToken) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *BaseToken) GetUseMetricPrefix() bool {
	if x != nil {
		return x.UseMetricPrefix
	}
	return false
}

type MilestoneKeyRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey  []byte `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	StartIndex uint32 `protobuf:"varint,2,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
	EndIndex   uint32 `protobuf:"varint,3,opt,name=endIndex,proto3" json:"endIndex,omitempty"`
}

func (x *MilestoneKeyRange) Reset() {
	*x = MilestoneKeyRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MilestoneKeyRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MilestoneKeyRange) ProtoMessage() {}

func (x *MilestoneKeyRange) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MilestoneKeyRange.ProtoReflect.Descriptor instead.
func (*MilestoneKeyRange) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{6}
}

func (x *MilestoneKeyRange) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *MilestoneKeyRange) GetStartIndex() uint32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *MilestoneKeyRange) GetEndIndex() uint32 {
	if x != nil {
		return x.EndIndex
	}
	return 0
}

type RentStructure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VByteCost       uint64 `protobuf:"varint,1,opt,name=vByteCost,proto3" json:"vByteCost,omitempty"`
	VByteFactorData uint64 `protobuf:"varint,2,opt,name=vByteFactorData,proto3" json:"vByteFactorData,omitempty"`
	VByteFactorKey  uint64 `protobuf:"varint,3,opt,name=vByteFactorKey,proto3" json:"vByteFactorKey,omitempty"`
}

func (x *RentStructure) Reset() {
	*x = RentStructure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RentStructure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RentStructure) ProtoMessage() {}

func (x *RentStructure) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RentStructure.ProtoReflect.Descriptor instead.
func (*RentStructure) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{7}
}

func (x *RentStructure) GetVByteCost() uint64 {
	if x != nil {
		return x.VByteCost
	}
	return 0
}

func (x *RentStructure) GetVByteFactorData() uint64 {
	if x != nil {
		return x.VByteFactorData
	}
	return 0
}

func (x *RentStructure) GetVByteFactorKey() uint64 {
	if x != nil {
		return x.VByteFactorKey
	}
	return 0
}

type NodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsHealthy          bool           `protobuf:"varint,1,opt,name=isHealthy,proto3" json:"isHealthy,omitempty"`
	LatestMilestone    *MilestoneInfo `protobuf:"bytes,2,opt,name=latestMilestone,proto3" json:"latestMilestone,omitempty"`
	ConfirmedMilestone *MilestoneInfo `protobuf:"bytes,3,opt,name=confirmedMilestone,proto3" json:"confirmedMilestone,omitempty"`
	PruningIndex       uint32         `protobuf:"varint,4,opt,name=pruningIndex,proto3" json:"pruningIndex,omitempty"`
	LedgerIndex        uint32         `protobuf:"varint,5,opt,name=ledgerIndex,proto3" json:"ledgerIndex,omitempty"`
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{8}
}

func (x *NodeStatus) GetIsHealthy() bool {
	if x != nil {
		return x.IsHealthy
	}
	return false
}

func (x *NodeStatus) GetLatestMilestone() *MilestoneInfo {
	if x != nil {
		return x.LatestMilestone
	}
	return nil
}

func (x *NodeStatus) GetConfirmedMilestone() *MilestoneInfo {
	if x != nil {
		return x.ConfirmedMilestone
	}
	return nil
}

func (x *NodeStatus) GetPruningIndex() uint32 {
	if x != nil {
		return x.PruningIndex
	}
	return 0
}

func (x *NodeStatus) GetLedgerIndex() uint32 {
	if x != nil {
		return x.LedgerIndex
	}
	return 0
}

type RawMilestone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RawMilestone) Reset() {
	*x = RawMilestone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawMilestone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawMilestone) ProtoMessage() {}

func (x *RawMilestone) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawMilestone.ProtoReflect.Descriptor instead.
func (*RawMilestone) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{9}
}

func (x *RawMilestone) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MilestoneId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MilestoneId) Reset() {
	*x = MilestoneId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MilestoneId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MilestoneId) ProtoMessage() {}

func (x *MilestoneId) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MilestoneId.ProtoReflect.Descriptor instead.
func (*MilestoneId) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{10}
}

func (x *MilestoneId) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type MilestoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MilestoneIndex uint32       `protobuf:"varint,1,opt,name=milestoneIndex,proto3" json:"milestoneIndex,omitempty"`
	MilestoneId    *MilestoneId `protobuf:"bytes,2,opt,name=milestoneId,proto3" json:"milestoneId,omitempty"`
}

func (x *MilestoneRequest) Reset() {
	*x = MilestoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MilestoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MilestoneRequest) ProtoMessage() {}

func (x *MilestoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MilestoneRequest.ProtoReflect.Descriptor instead.
func (*MilestoneRequest) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{11}
}

func (x *MilestoneRequest) GetMilestoneIndex() uint32 {
	if x != nil {
		return x.MilestoneIndex
	}
	return 0
}

func (x *MilestoneRequest) GetMilestoneId() *MilestoneId {
	if x != nil {
		return x.MilestoneId
	}
	return nil
}

type MilestoneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MilestoneId        *MilestoneId `protobuf:"bytes,1,opt,name=milestoneId,proto3" json:"milestoneId,omitempty"`
	MilestoneIndex     uint32       `protobuf:"varint,2,opt,name=milestoneIndex,proto3" json:"milestoneIndex,omitempty"`
	MilestoneTimestamp uint32       `protobuf:"varint,3,opt,name=milestoneTimestamp,proto3" json:"milestoneTimestamp,omitempty"`
}

func (x *MilestoneInfo) Reset() {
	*x = MilestoneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MilestoneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MilestoneInfo) ProtoMessage() {}

func (x *MilestoneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MilestoneInfo.ProtoReflect.Descriptor instead.
func (*MilestoneInfo) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{12}
}

func (x *MilestoneInfo) GetMilestoneId() *MilestoneId {
	if x != nil {
		return x.MilestoneId
	}
	return nil
}

func (x *MilestoneInfo) GetMilestoneIndex() uint32 {
	if x != nil {
		return x.MilestoneIndex
	}
	return 0
}

func (x *MilestoneInfo) GetMilestoneTimestamp() uint32 {
	if x != nil {
		return x.MilestoneTimestamp
	}
	return 0
}

type Milestone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MilestoneInfo *MilestoneInfo `protobuf:"bytes,1,opt,name=milestoneInfo,proto3" json:"milestoneInfo,omitempty"`
	Milestone     *RawMilestone  `protobuf:"bytes,2,opt,name=milestone,proto3" json:"milestone,omitempty"`
}

func (x *Milestone) Reset() {
	*x = Milestone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Milestone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Milestone) ProtoMessage() {}

func (x *Milestone) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Milestone.ProtoReflect.Descriptor instead.
func (*Milestone) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{13}
}

func (x *Milestone) GetMilestoneInfo() *MilestoneInfo {
	if x != nil {
		return x.MilestoneInfo
	}
	return nil
}

func (x *Milestone) GetMilestone() *RawMilestone {
	if x != nil {
		return x.Milestone
	}
	return nil
}

type WhiteFlagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MilestoneIndex      uint32       `protobuf:"varint,1,opt,name=milestoneIndex,proto3" json:"milestoneIndex,omitempty"`
	MilestoneTimestamp  uint32       `protobuf:"varint,2,opt,name=milestoneTimestamp,proto3" json:"milestoneTimestamp,omitempty"`
	Parents             []*MessageId `protobuf:"bytes,3,rep,name=parents,proto3" json:"parents,omitempty"`
	PreviousMilestoneId *MilestoneId `protobuf:"bytes,4,opt,name=previousMilestoneId,proto3" json:"previousMilestoneId,omitempty"`
}

func (x *WhiteFlagRequest) Reset() {
	*x = WhiteFlagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhiteFlagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhiteFlagRequest) ProtoMessage() {}

func (x *WhiteFlagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhiteFlagRequest.ProtoReflect.Descriptor instead.
func (*WhiteFlagRequest) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{14}
}

func (x *WhiteFlagRequest) GetMilestoneIndex() uint32 {
	if x != nil {
		return x.MilestoneIndex
	}
	return 0
}

func (x *WhiteFlagRequest) GetMilestoneTimestamp() uint32 {
	if x != nil {
		return x.MilestoneTimestamp
	}
	return 0
}

func (x *WhiteFlagRequest) GetParents() []*MessageId {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *WhiteFlagRequest) GetPreviousMilestoneId() *MilestoneId {
	if x != nil {
		return x.PreviousMilestoneId
	}
	return nil
}

type WhiteFlagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MilestoneConfirmedMerkleRoot []byte `protobuf:"bytes,1,opt,name=milestoneConfirmedMerkleRoot,proto3" json:"milestoneConfirmedMerkleRoot,omitempty"`
	MilestoneAppliedMerkleRoot   []byte `protobuf:"bytes,2,opt,name=milestoneAppliedMerkleRoot,proto3" json:"milestoneAppliedMerkleRoot,omitempty"`
}

func (x *WhiteFlagResponse) Reset() {
	*x = WhiteFlagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhiteFlagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhiteFlagResponse) ProtoMessage() {}

func (x *WhiteFlagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhiteFlagResponse.ProtoReflect.Descriptor instead.
func (*WhiteFlagResponse) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{15}
}

func (x *WhiteFlagResponse) GetMilestoneConfirmedMerkleRoot() []byte {
	if x != nil {
		return x.MilestoneConfirmedMerkleRoot
	}
	return nil
}

func (x *WhiteFlagResponse) GetMilestoneAppliedMerkleRoot() []byte {
	if x != nil {
		return x.MilestoneAppliedMerkleRoot
	}
	return nil
}

// Messages
type MessageFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageFilter) Reset() {
	*x = MessageFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageFilter) ProtoMessage() {}

func (x *MessageFilter) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageFilter.ProtoReflect.Descriptor instead.
func (*MessageFilter) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{16}
}

type RawMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RawMessage) Reset() {
	*x = RawMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawMessage) ProtoMessage() {}

func (x *RawMessage) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawMessage.ProtoReflect.Descriptor instead.
func (*RawMessage) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{17}
}

func (x *RawMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MessageId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MessageId) Reset() {
	*x = MessageId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageId) ProtoMessage() {}

func (x *MessageId) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageId.ProtoReflect.Descriptor instead.
func (*MessageId) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{18}
}

func (x *MessageId) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId *MessageId  `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Message   *RawMessage `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{19}
}

func (x *Message) GetMessageId() *MessageId {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *Message) GetMessage() *RawMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type MessageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId                  *MessageId                           `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Parents                    []*MessageId                         `protobuf:"bytes,2,rep,name=parents,proto3" json:"parents,omitempty"`
	Solid                      bool                                 `protobuf:"varint,3,opt,name=solid,proto3" json:"solid,omitempty"`
	ShouldPromote              bool                                 `protobuf:"varint,4,opt,name=shouldPromote,proto3" json:"shouldPromote,omitempty"`
	ShouldReattach             bool                                 `protobuf:"varint,5,opt,name=shouldReattach,proto3" json:"shouldReattach,omitempty"`
	ReferencedByMilestoneIndex uint32                               `protobuf:"varint,6,opt,name=referencedByMilestoneIndex,proto3" json:"referencedByMilestoneIndex,omitempty"`
	MilestoneIndex             uint32                               `protobuf:"varint,7,opt,name=milestoneIndex,proto3" json:"milestoneIndex,omitempty"`
	LedgerInclusionState       MessageMetadata_LedgerInclusionState `protobuf:"varint,8,opt,name=ledgerInclusionState,proto3,enum=inx.MessageMetadata_LedgerInclusionState" json:"ledgerInclusionState,omitempty"`
	ConflictReason             MessageMetadata_ConflictReason       `protobuf:"varint,9,opt,name=conflictReason,proto3,enum=inx.MessageMetadata_ConflictReason" json:"conflictReason,omitempty"`
}

func (x *MessageMetadata) Reset() {
	*x = MessageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageMetadata) ProtoMessage() {}

func (x *MessageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageMetadata.ProtoReflect.Descriptor instead.
func (*MessageMetadata) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{20}
}

func (x *MessageMetadata) GetMessageId() *MessageId {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *MessageMetadata) GetParents() []*MessageId {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *MessageMetadata) GetSolid() bool {
	if x != nil {
		return x.Solid
	}
	return false
}

func (x *MessageMetadata) GetShouldPromote() bool {
	if x != nil {
		return x.ShouldPromote
	}
	return false
}

func (x *MessageMetadata) GetShouldReattach() bool {
	if x != nil {
		return x.ShouldReattach
	}
	return false
}

func (x *MessageMetadata) GetReferencedByMilestoneIndex() uint32 {
	if x != nil {
		return x.ReferencedByMilestoneIndex
	}
	return 0
}

func (x *MessageMetadata) GetMilestoneIndex() uint32 {
	if x != nil {
		return x.MilestoneIndex
	}
	return 0
}

func (x *MessageMetadata) GetLedgerInclusionState() MessageMetadata_LedgerInclusionState {
	if x != nil {
		return x.LedgerInclusionState
	}
	return MessageMetadata_NO_TRANSACTION
}

func (x *MessageMetadata) GetConflictReason() MessageMetadata_ConflictReason {
	if x != nil {
		return x.ConflictReason
	}
	return MessageMetadata_NONE
}

// UTXO
type OutputId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OutputId) Reset() {
	*x = OutputId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputId) ProtoMessage() {}

func (x *OutputId) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputId.ProtoReflect.Descriptor instead.
func (*OutputId) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{21}
}

func (x *OutputId) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type OutputResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerIndex uint32 `protobuf:"varint,1,opt,name=ledgerIndex,proto3" json:"ledgerIndex,omitempty"`
	// Types that are assignable to Payload:
	//	*OutputResponse_Output
	//	*OutputResponse_Spent
	Payload isOutputResponse_Payload `protobuf_oneof:"payload"`
}

func (x *OutputResponse) Reset() {
	*x = OutputResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputResponse) ProtoMessage() {}

func (x *OutputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputResponse.ProtoReflect.Descriptor instead.
func (*OutputResponse) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{22}
}

func (x *OutputResponse) GetLedgerIndex() uint32 {
	if x != nil {
		return x.LedgerIndex
	}
	return 0
}

func (m *OutputResponse) GetPayload() isOutputResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *OutputResponse) GetOutput() *LedgerOutput {
	if x, ok := x.GetPayload().(*OutputResponse_Output); ok {
		return x.Output
	}
	return nil
}

func (x *OutputResponse) GetSpent() *LedgerSpent {
	if x, ok := x.GetPayload().(*OutputResponse_Spent); ok {
		return x.Spent
	}
	return nil
}

type isOutputResponse_Payload interface {
	isOutputResponse_Payload()
}

type OutputResponse_Output struct {
	Output *LedgerOutput `protobuf:"bytes,2,opt,name=output,proto3,oneof"`
}

type OutputResponse_Spent struct {
	Spent *LedgerSpent `protobuf:"bytes,3,opt,name=spent,proto3,oneof"`
}

func (*OutputResponse_Output) isOutputResponse_Payload() {}

func (*OutputResponse_Spent) isOutputResponse_Payload() {}

type UnspentOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerIndex uint32        `protobuf:"varint,1,opt,name=ledgerIndex,proto3" json:"ledgerIndex,omitempty"`
	Output      *LedgerOutput `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *UnspentOutput) Reset() {
	*x = UnspentOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnspentOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnspentOutput) ProtoMessage() {}

func (x *UnspentOutput) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnspentOutput.ProtoReflect.Descriptor instead.
func (*UnspentOutput) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{23}
}

func (x *UnspentOutput) GetLedgerIndex() uint32 {
	if x != nil {
		return x.LedgerIndex
	}
	return 0
}

func (x *UnspentOutput) GetOutput() *LedgerOutput {
	if x != nil {
		return x.Output
	}
	return nil
}

type LedgerOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OutputId                 *OutputId  `protobuf:"bytes,1,opt,name=outputId,proto3" json:"outputId,omitempty"`
	MessageId                *MessageId `protobuf:"bytes,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
	MilestoneIndexBooked     uint32     `protobuf:"varint,3,opt,name=milestoneIndexBooked,proto3" json:"milestoneIndexBooked,omitempty"`
	MilestoneTimestampBooked uint32     `protobuf:"varint,4,opt,name=milestoneTimestampBooked,proto3" json:"milestoneTimestampBooked,omitempty"`
	Output                   []byte     `protobuf:"bytes,5,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *LedgerOutput) Reset() {
	*x = LedgerOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerOutput) ProtoMessage() {}

func (x *LedgerOutput) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerOutput.ProtoReflect.Descriptor instead.
func (*LedgerOutput) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{24}
}

func (x *LedgerOutput) GetOutputId() *OutputId {
	if x != nil {
		return x.OutputId
	}
	return nil
}

func (x *LedgerOutput) GetMessageId() *MessageId {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *LedgerOutput) GetMilestoneIndexBooked() uint32 {
	if x != nil {
		return x.MilestoneIndexBooked
	}
	return 0
}

func (x *LedgerOutput) GetMilestoneTimestampBooked() uint32 {
	if x != nil {
		return x.MilestoneTimestampBooked
	}
	return 0
}

func (x *LedgerOutput) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

type LedgerSpent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output                  *LedgerOutput `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	TransactionIdSpent      []byte        `protobuf:"bytes,2,opt,name=transactionIdSpent,proto3" json:"transactionIdSpent,omitempty"`
	MilestoneIndexSpent     uint32        `protobuf:"varint,3,opt,name=milestoneIndexSpent,proto3" json:"milestoneIndexSpent,omitempty"`
	MilestoneTimestampSpent uint32        `protobuf:"varint,4,opt,name=milestoneTimestampSpent,proto3" json:"milestoneTimestampSpent,omitempty"`
}

func (x *LedgerSpent) Reset() {
	*x = LedgerSpent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerSpent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerSpent) ProtoMessage() {}

func (x *LedgerSpent) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerSpent.ProtoReflect.Descriptor instead.
func (*LedgerSpent) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{25}
}

func (x *LedgerSpent) GetOutput() *LedgerOutput {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *LedgerSpent) GetTransactionIdSpent() []byte {
	if x != nil {
		return x.TransactionIdSpent
	}
	return nil
}

func (x *LedgerSpent) GetMilestoneIndexSpent() uint32 {
	if x != nil {
		return x.MilestoneIndexSpent
	}
	return 0
}

func (x *LedgerSpent) GetMilestoneTimestampSpent() uint32 {
	if x != nil {
		return x.MilestoneTimestampSpent
	}
	return 0
}

type TreasuryOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MilestoneId *MilestoneId `protobuf:"bytes,1,opt,name=milestoneId,proto3" json:"milestoneId,omitempty"`
	Amount      uint64       `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TreasuryOutput) Reset() {
	*x = TreasuryOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasuryOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasuryOutput) ProtoMessage() {}

func (x *TreasuryOutput) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasuryOutput.ProtoReflect.Descriptor instead.
func (*TreasuryOutput) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{26}
}

func (x *TreasuryOutput) GetMilestoneId() *MilestoneId {
	if x != nil {
		return x.MilestoneId
	}
	return nil
}

func (x *TreasuryOutput) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type LedgerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartMilestoneIndex uint32 `protobuf:"varint,1,opt,name=startMilestoneIndex,proto3" json:"startMilestoneIndex,omitempty"`
}

func (x *LedgerRequest) Reset() {
	*x = LedgerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerRequest) ProtoMessage() {}

func (x *LedgerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerRequest.ProtoReflect.Descriptor instead.
func (*LedgerRequest) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{27}
}

func (x *LedgerRequest) GetStartMilestoneIndex() uint32 {
	if x != nil {
		return x.StartMilestoneIndex
	}
	return 0
}

type LedgerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MilestoneIndex uint32          `protobuf:"varint,1,opt,name=milestoneIndex,proto3" json:"milestoneIndex,omitempty"`
	Created        []*LedgerOutput `protobuf:"bytes,2,rep,name=created,proto3" json:"created,omitempty"`
	Consumed       []*LedgerSpent  `protobuf:"bytes,3,rep,name=consumed,proto3" json:"consumed,omitempty"`
}

func (x *LedgerUpdate) Reset() {
	*x = LedgerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerUpdate) ProtoMessage() {}

func (x *LedgerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerUpdate.ProtoReflect.Descriptor instead.
func (*LedgerUpdate) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{28}
}

func (x *LedgerUpdate) GetMilestoneIndex() uint32 {
	if x != nil {
		return x.MilestoneIndex
	}
	return 0
}

func (x *LedgerUpdate) GetCreated() []*LedgerOutput {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *LedgerUpdate) GetConsumed() []*LedgerSpent {
	if x != nil {
		return x.Consumed
	}
	return nil
}

type TreasuryUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MilestoneIndex uint32          `protobuf:"varint,1,opt,name=milestoneIndex,proto3" json:"milestoneIndex,omitempty"`
	Created        *TreasuryOutput `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Consumed       *TreasuryOutput `protobuf:"bytes,3,opt,name=consumed,proto3" json:"consumed,omitempty"`
}

func (x *TreasuryUpdate) Reset() {
	*x = TreasuryUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreasuryUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreasuryUpdate) ProtoMessage() {}

func (x *TreasuryUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreasuryUpdate.ProtoReflect.Descriptor instead.
func (*TreasuryUpdate) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{29}
}

func (x *TreasuryUpdate) GetMilestoneIndex() uint32 {
	if x != nil {
		return x.MilestoneIndex
	}
	return 0
}

func (x *TreasuryUpdate) GetCreated() *TreasuryOutput {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *TreasuryUpdate) GetConsumed() *TreasuryOutput {
	if x != nil {
		return x.Consumed
	}
	return nil
}

type RawReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RawReceipt) Reset() {
	*x = RawReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawReceipt) ProtoMessage() {}

func (x *RawReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawReceipt.ProtoReflect.Descriptor instead.
func (*RawReceipt) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{30}
}

func (x *RawReceipt) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// REST API
type APIRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route string `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	Host  string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port  uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *APIRouteRequest) Reset() {
	*x = APIRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inx_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIRouteRequest) ProtoMessage() {}

func (x *APIRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inx_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIRouteRequest.ProtoReflect.Descriptor instead.
func (*APIRouteRequest) Descriptor() ([]byte, []int) {
	return file_inx_proto_rawDescGZIP(), []int{31}
}

func (x *APIRouteRequest) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *APIRouteRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *APIRouteRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

var File_inx_proto protoreflect.FileDescriptor

var file_inx_proto_rawDesc = []byte{
	0x0a, 0x09, 0x69, 0x6e, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x69, 0x6e, 0x78,
	0x22, 0xc0, 0x01, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69,
	0x6e, 0x78, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xaa, 0x01, 0x0a, 0x0b, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x41,
	0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x0a, 0x0a, 0x08, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x8c, 0x02, 0x0a,
	0x11, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x6d,
	0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x6d, 0x69,
	0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x12, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x12, 0x6d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2c, 0x0a,
	0x09, 0x62, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xec, 0x01, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x65, 0x63, 0x68, 0x33, 0x32, 0x48, 0x52, 0x50, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x65, 0x63, 0x68, 0x33, 0x32, 0x48, 0x52, 0x50, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x57, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x57, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x38,
	0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x52, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0xb7, 0x01, 0x0a, 0x09, 0x42,
	0x61, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x22, 0x6d, 0x0a, 0x11, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x7f, 0x0a, 0x0d, 0x52, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x42, 0x79, 0x74, 0x65, 0x43, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x76, 0x42, 0x79, 0x74, 0x65, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x42, 0x79, 0x74, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x76, 0x42, 0x79,
	0x74, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e,
	0x76, 0x42, 0x79, 0x74, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x76, 0x42, 0x79, 0x74, 0x65, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x4b, 0x65, 0x79, 0x22, 0xf2, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x79, 0x12, 0x3c, 0x0a, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6e, 0x78,
	0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12,
	0x42, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x4d, 0x69, 0x6c, 0x65,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6e,
	0x78, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x72, 0x75, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x22, 0x0a, 0x0c, 0x52, 0x61, 0x77,
	0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1d, 0x0a,
	0x0b, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x10,
	0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32, 0x0a, 0x0b, 0x6d, 0x69, 0x6c, 0x65,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x52,
	0x0b, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a,
	0x0d, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32,
	0x0a, 0x0b, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x49, 0x64, 0x52, 0x0b, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x69, 0x6c, 0x65,
	0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x69,
	0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x76, 0x0a, 0x09, 0x4d, 0x69,
	0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x6d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0d, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2f, 0x0a, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x52, 0x61, 0x77, 0x4d, 0x69,
	0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x10, 0x57, 0x68, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x2e, 0x0a, 0x12, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x28, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x52, 0x07, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x13, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x52, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x97, 0x01,
	0x0a, 0x11, 0x57, 0x68, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x1c, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1c, 0x6d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x4d, 0x65, 0x72,
	0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x3e, 0x0a, 0x1a, 0x6d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4d, 0x65, 0x72, 0x6b, 0x6c,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x6d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x4d, 0x65, 0x72,
	0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x20, 0x0a, 0x0a, 0x52, 0x61, 0x77, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x09, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x52, 0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc0, 0x07, 0x0a, 0x0f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x2c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x07, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x6c, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x52, 0x65, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x68, 0x6f,
	0x75, 0x6c, 0x64, 0x52, 0x65, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x3e, 0x0a, 0x1a, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x42, 0x79, 0x4d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x1a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x42, 0x79, 0x4d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0e, 0x6d,
	0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x5d, 0x0a, 0x14, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x63,
	0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x6e,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x14, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x78,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x49, 0x0a, 0x14, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49,
	0x4e, 0x43, 0x4c, 0x55, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e,
	0x46, 0x4c, 0x49, 0x43, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x91, 0x03, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x53, 0x50, 0x45, 0x4e, 0x54, 0x10, 0x01,
	0x12, 0x29, 0x0a, 0x25, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x5f, 0x53, 0x50, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x54, 0x48, 0x49, 0x53, 0x5f,
	0x4d, 0x49, 0x4c, 0x45, 0x53, 0x54, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03,
	0x12, 0x1d, 0x0a, 0x19, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54,
	0x5f, 0x53, 0x55, 0x4d, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x04, 0x12,
	0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41,
	0x54, 0x55, 0x52, 0x45, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x49, 0x4d, 0x45, 0x4c, 0x4f,
	0x43, 0x4b, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x06,
	0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4e, 0x41, 0x54, 0x49,
	0x56, 0x45, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x53, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x52,
	0x45, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x55, 0x4c, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x55, 0x4e,
	0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x4d,
	0x45, 0x4e, 0x54, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x53, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x10, 0x0b, 0x12, 0x22, 0x0a, 0x1e, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0c, 0x12, 0x1f, 0x0a,
	0x1a, 0x53, 0x45, 0x4d, 0x41, 0x4e, 0x54, 0x49, 0x43, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xff, 0x01, 0x22, 0x1a,
	0x0a, 0x08, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x2b, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6e,
	0x78, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x05, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x5c, 0x0a, 0x0d, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x29, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22,
	0xef, 0x01, 0x0a, 0x0c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x29, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49,
	0x64, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x6d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x6f, 0x6f, 0x6b, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x3a, 0x0a,
	0x18, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x18, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0xd4, 0x01, 0x0a, 0x0b, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x53, 0x70, 0x65, 0x6e,
	0x74, 0x12, 0x29, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x12,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x53, 0x70, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13,
	0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x70,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x17, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x17, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x22, 0x5c, 0x0a, 0x0e, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x6d, 0x69,
	0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49,
	0x64, 0x52, 0x0b, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x0d, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x69, 0x6c, 0x65, 0x73,
	0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x91, 0x01, 0x0a, 0x0c, 0x4c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x69,
	0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x2c, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x53, 0x70,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x22, 0x98, 0x01,
	0x0a, 0x0e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x78, 0x2e,
	0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x78, 0x2e,
	0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x22, 0x20, 0x0a, 0x0a, 0x52, 0x61, 0x77, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4f, 0x0a, 0x0f, 0x41, 0x50,
	0x49, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x32, 0xb3, 0x09, 0x0a, 0x03,
	0x49, 0x4e, 0x58, 0x12, 0x30, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4e, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0f, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d,
	0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e,
	0x69, 0x6e, 0x78, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x15, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e,
	0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x3a, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x6f, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d,
	0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x0d, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4e,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0e, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x69,
	0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x30, 0x01, 0x12, 0x3d, 0x0a, 0x1a, 0x4c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x4d, 0x69,
	0x6c, 0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x0d, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4e, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0e, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x69, 0x6c,
	0x65, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x30, 0x01, 0x12, 0x41, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x15, 0x2e, 0x69,
	0x6e, 0x78, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x12, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x1a, 0x0c, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x6f, 0x53,
	0x6f, 0x6c, 0x69, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x69,
	0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x1a, 0x14, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x30, 0x01, 0x12, 0x48, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x54, 0x6f, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x69, 0x6e, 0x78,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x30, 0x01, 0x12, 0x30, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x0f, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x52, 0x61, 0x77, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x0e, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x0e, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x1a, 0x0f, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x52, 0x61, 0x77, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x2e, 0x69, 0x6e,
	0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x1a, 0x14, 0x2e, 0x69, 0x6e,
	0x78, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x39, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x0d, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4e, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x55, 0x6e, 0x73,
	0x70, 0x65, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x30, 0x01, 0x12, 0x40, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x6f, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x69, 0x6e, 0x78, 0x2e,
	0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x30, 0x01, 0x12, 0x44,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x6f, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x69, 0x6e, 0x78, 0x2e,
	0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x69, 0x6e, 0x78, 0x2e, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x30, 0x01, 0x12, 0x30, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x0d, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x49,
	0x64, 0x1a, 0x13, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x54, 0x6f, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x73, 0x12, 0x0d, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x0f, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x52, 0x61, 0x77, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x30, 0x01, 0x12, 0x37, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x41, 0x50, 0x49, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x69, 0x6e, 0x78, 0x2e,
	0x41, 0x50, 0x49, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0d, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x39,
	0x0a, 0x12, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x50, 0x49, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x69, 0x6e, 0x78,
	0x2e, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x11, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0f,
	0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x69, 0x6e, 0x78, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x69, 0x6f, 0x74, 0x61, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x78, 0x2f, 0x67,
	0x6f, 0x3b, 0x69, 0x6e, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_inx_proto_rawDescOnce sync.Once
	file_inx_proto_rawDescData = file_inx_proto_rawDesc
)

func file_inx_proto_rawDescGZIP() []byte {
	file_inx_proto_rawDescOnce.Do(func() {
		file_inx_proto_rawDescData = protoimpl.X.CompressGZIP(file_inx_proto_rawDescData)
	})
	return file_inx_proto_rawDescData
}

var file_inx_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_inx_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_inx_proto_goTypes = []interface{}{
	(MessageMetadata_LedgerInclusionState)(0), // 0: inx.MessageMetadata.LedgerInclusionState
	(MessageMetadata_ConflictReason)(0),       // 1: inx.MessageMetadata.ConflictReason
	(*APIRequest)(nil),                        // 2: inx.APIRequest
	(*APIResponse)(nil),                       // 3: inx.APIResponse
	(*NoParams)(nil),                          // 4: inx.NoParams
	(*NodeConfiguration)(nil),                 // 5: inx.NodeConfiguration
	(*ProtocolParameters)(nil),                // 6: inx.ProtocolParameters
	(*BaseToken)(nil),                         // 7: inx.BaseToken
	(*MilestoneKeyRange)(nil),                 // 8: inx.MilestoneKeyRange
	(*RentStructure)(nil),                     // 9: inx.RentStructure
	(*NodeStatus)(nil),                        // 10: inx.NodeStatus
	(*RawMilestone)(nil),                      // 11: inx.RawMilestone
	(*MilestoneId)(nil),                       // 12: inx.MilestoneId
	(*MilestoneRequest)(nil),                  // 13: inx.MilestoneRequest
	(*MilestoneInfo)(nil),                     // 14: inx.MilestoneInfo
	(*Milestone)(nil),                         // 15: inx.Milestone
	(*WhiteFlagRequest)(nil),                  // 16: inx.WhiteFlagRequest
	(*WhiteFlagResponse)(nil),                 // 17: inx.WhiteFlagResponse
	(*MessageFilter)(nil),                     // 18: inx.MessageFilter
	(*RawMessage)(nil),                        // 19: inx.RawMessage
	(*MessageId)(nil),                         // 20: inx.MessageId
	(*Message)(nil),                           // 21: inx.Message
	(*MessageMetadata)(nil),                   // 22: inx.MessageMetadata
	(*OutputId)(nil),                          // 23: inx.OutputId
	(*OutputResponse)(nil),                    // 24: inx.OutputResponse
	(*UnspentOutput)(nil),                     // 25: inx.UnspentOutput
	(*LedgerOutput)(nil),                      // 26: inx.LedgerOutput
	(*LedgerSpent)(nil),                       // 27: inx.LedgerSpent
	(*TreasuryOutput)(nil),                    // 28: inx.TreasuryOutput
	(*LedgerRequest)(nil),                     // 29: inx.LedgerRequest
	(*LedgerUpdate)(nil),                      // 30: inx.LedgerUpdate
	(*TreasuryUpdate)(nil),                    // 31: inx.TreasuryUpdate
	(*RawReceipt)(nil),                        // 32: inx.RawReceipt
	(*APIRouteRequest)(nil),                   // 33: inx.APIRouteRequest
	nil,                                       // 34: inx.APIRequest.HeadersEntry
	nil,                                       // 35: inx.APIResponse.HeadersEntry
}
var file_inx_proto_depIdxs = []int32{
	34, // 0: inx.APIRequest.headers:type_name -> inx.APIRequest.HeadersEntry
	35, // 1: inx.APIResponse.headers:type_name -> inx.APIResponse.HeadersEntry
	6,  // 2: inx.NodeConfiguration.protocolParameters:type_name -> inx.ProtocolParameters
	8,  // 3: inx.NodeConfiguration.milestoneKeyRanges:type_name -> inx.MilestoneKeyRange
	7,  // 4: inx.NodeConfiguration.baseToken:type_name -> inx.BaseToken
	9,  // 5: inx.ProtocolParameters.rentStructure:type_name -> inx.RentStructure
	14, // 6: inx.NodeStatus.latestMilestone:type_name -> inx.MilestoneInfo
	14, // 7: inx.NodeStatus.confirmedMilestone:type_name -> inx.MilestoneInfo
	12, // 8: inx.MilestoneRequest.milestoneId:type_name -> inx.MilestoneId
	12, // 9: inx.MilestoneInfo.milestoneId:type_name -> inx.MilestoneId
	14, // 10: inx.Milestone.milestoneInfo:type_name -> inx.MilestoneInfo
	11, // 11: inx.Milestone.milestone:type_name -> inx.RawMilestone
	20, // 12: inx.WhiteFlagRequest.parents:type_name -> inx.MessageId
	12, // 13: inx.WhiteFlagRequest.previousMilestoneId:type_name -> inx.MilestoneId
	20, // 14: inx.Message.messageId:type_name -> inx.MessageId
	19, // 15: inx.Message.message:type_name -> inx.RawMessage
	20, // 16: inx.MessageMetadata.messageId:type_name -> inx.MessageId
	20, // 17: inx.MessageMetadata.parents:type_name -> inx.MessageId
	0,  // 18: inx.MessageMetadata.ledgerInclusionState:type_name -> inx.MessageMetadata.LedgerInclusionState
	1,  // 19: inx.MessageMetadata.conflictReason:type_name -> inx.MessageMetadata.ConflictReason
	26, // 20: inx.OutputResponse.output:type_name -> inx.LedgerOutput
	27, // 21: inx.OutputResponse.spent:type_name -> inx.LedgerSpent
	26, // 22: inx.UnspentOutput.output:type_name -> inx.LedgerOutput
	23, // 23: inx.LedgerOutput.outputId:type_name -> inx.OutputId
	20, // 24: inx.LedgerOutput.messageId:type_name -> inx.MessageId
	26, // 25: inx.LedgerSpent.output:type_name -> inx.LedgerOutput
	12, // 26: inx.TreasuryOutput.milestoneId:type_name -> inx.MilestoneId
	26, // 27: inx.LedgerUpdate.created:type_name -> inx.LedgerOutput
	27, // 28: inx.LedgerUpdate.consumed:type_name -> inx.LedgerSpent
	28, // 29: inx.TreasuryUpdate.created:type_name -> inx.TreasuryOutput
	28, // 30: inx.TreasuryUpdate.consumed:type_name -> inx.TreasuryOutput
	4,  // 31: inx.INX.ReadNodeStatus:input_type -> inx.NoParams
	4,  // 32: inx.INX.ReadNodeConfiguration:input_type -> inx.NoParams
	13, // 33: inx.INX.ReadMilestone:input_type -> inx.MilestoneRequest
	4,  // 34: inx.INX.ListenToLatestMilestone:input_type -> inx.NoParams
	4,  // 35: inx.INX.ListenToConfirmedMilestone:input_type -> inx.NoParams
	16, // 36: inx.INX.ComputeWhiteFlag:input_type -> inx.WhiteFlagRequest
	18, // 37: inx.INX.ListenToMessages:input_type -> inx.MessageFilter
	18, // 38: inx.INX.ListenToSolidMessages:input_type -> inx.MessageFilter
	18, // 39: inx.INX.ListenToReferencedMessages:input_type -> inx.MessageFilter
	19, // 40: inx.INX.SubmitMessage:input_type -> inx.RawMessage
	20, // 41: inx.INX.ReadMessage:input_type -> inx.MessageId
	20, // 42: inx.INX.ReadMessageMetadata:input_type -> inx.MessageId
	4,  // 43: inx.INX.ReadUnspentOutputs:input_type -> inx.NoParams
	29, // 44: inx.INX.ListenToLedgerUpdates:input_type -> inx.LedgerRequest
	29, // 45: inx.INX.ListenToTreasuryUpdates:input_type -> inx.LedgerRequest
	23, // 46: inx.INX.ReadOutput:input_type -> inx.OutputId
	4,  // 47: inx.INX.ListenToMigrationReceipts:input_type -> inx.NoParams
	33, // 48: inx.INX.RegisterAPIRoute:input_type -> inx.APIRouteRequest
	33, // 49: inx.INX.UnregisterAPIRoute:input_type -> inx.APIRouteRequest
	2,  // 50: inx.INX.PerformAPIRequest:input_type -> inx.APIRequest
	10, // 51: inx.INX.ReadNodeStatus:output_type -> inx.NodeStatus
	5,  // 52: inx.INX.ReadNodeConfiguration:output_type -> inx.NodeConfiguration
	15, // 53: inx.INX.ReadMilestone:output_type -> inx.Milestone
	15, // 54: inx.INX.ListenToLatestMilestone:output_type -> inx.Milestone
	15, // 55: inx.INX.ListenToConfirmedMilestone:output_type -> inx.Milestone
	17, // 56: inx.INX.ComputeWhiteFlag:output_type -> inx.WhiteFlagResponse
	21, // 57: inx.INX.ListenToMessages:output_type -> inx.Message
	22, // 58: inx.INX.ListenToSolidMessages:output_type -> inx.MessageMetadata
	22, // 59: inx.INX.ListenToReferencedMessages:output_type -> inx.MessageMetadata
	20, // 60: inx.INX.SubmitMessage:output_type -> inx.MessageId
	19, // 61: inx.INX.ReadMessage:output_type -> inx.RawMessage
	22, // 62: inx.INX.ReadMessageMetadata:output_type -> inx.MessageMetadata
	25, // 63: inx.INX.ReadUnspentOutputs:output_type -> inx.UnspentOutput
	30, // 64: inx.INX.ListenToLedgerUpdates:output_type -> inx.LedgerUpdate
	31, // 65: inx.INX.ListenToTreasuryUpdates:output_type -> inx.TreasuryUpdate
	24, // 66: inx.INX.ReadOutput:output_type -> inx.OutputResponse
	32, // 67: inx.INX.ListenToMigrationReceipts:output_type -> inx.RawReceipt
	4,  // 68: inx.INX.RegisterAPIRoute:output_type -> inx.NoParams
	4,  // 69: inx.INX.UnregisterAPIRoute:output_type -> inx.NoParams
	3,  // 70: inx.INX.PerformAPIRequest:output_type -> inx.APIResponse
	51, // [51:71] is the sub-list for method output_type
	31, // [31:51] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_inx_proto_init() }
func file_inx_proto_init() {
	if File_inx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_inx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtocolParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MilestoneKeyRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RentStructure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawMilestone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MilestoneId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MilestoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MilestoneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Milestone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhiteFlagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhiteFlagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnspentOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerSpent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreasuryOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreasuryUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inx_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_inx_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*OutputResponse_Output)(nil),
		(*OutputResponse_Spent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inx_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inx_proto_goTypes,
		DependencyIndexes: file_inx_proto_depIdxs,
		EnumInfos:         file_inx_proto_enumTypes,
		MessageInfos:      file_inx_proto_msgTypes,
	}.Build()
	File_inx_proto = out.File
	file_inx_proto_rawDesc = nil
	file_inx_proto_goTypes = nil
	file_inx_proto_depIdxs = nil
}
